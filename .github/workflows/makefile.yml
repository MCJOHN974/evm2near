name: Compile CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master", "*" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install solidity & wasm tools
      run: |
        sudo add-apt-repository ppa:ethereum/ethereum
        sudo apt-get update
        sudo apt-get install -y wabt solc

    - name: Add wasi target
      run: rustup target add wasm32-wasi
      
    - name: Add unknown target
      run: rustup target add wasm32-unknown-unknown
      
    - name: Install dependecies
      run:  cargo fetch
      
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
      
    - name: Build
      run: make

    - name: Run unit tests
      run: make check

    - name: Install dependencies for lints
      run: |
        rustup component add rustfmt --toolchain nightly-2022-09-07-x86_64-unknown-linux-gnu
        rustup component add clippy --toolchain nightly-2022-09-07-x86_64-unknown-linux-gnu

    - name: Lints
      run: |
        cargo fmt --check
        cargo clippy --workspace -- -D warnings

    - name: Install Wasmtime & Run tests
      run: |
        curl https://wasmtime.dev/install.sh -sSf | bash
        export WASMTIME_HOME="$HOME/.wasmtime"
        export PATH="$WASMTIME_HOME/bin:$PATH"SELENIUM_JAR_PATH=/usr/share/java/selenium-server.jar

        bash -c "python3 tools/tests.py"
        
    - name: Install pandas
      run: pip3 install pandas

    - name: Run benchmark
      run: python3 tools/bench.py

    - name: Copy csv
      env:
        SRC_FOLDER_PATH: 'tools/benchmark/csvs'
        TARGET_BRANCH: 'gh-pages'
      run: |
        files=$(find $SRC_FOLDER_PATH -type f) # get the file list
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'
        git fetch                         # fetch branches
        git checkout $TARGET_BRANCH       # checkout to your branch
        git checkout ${GITHUB_REF##*/} -- $files # copy files from the source branch
        git add -A
        git diff-index --quiet HEAD ||  git commit -am "deploy files"  # commit to the repository (ignore if no modification)
        git push origin $TARGET_BRANCH # push to remote branch

    - uses: JamesIves/github-pages-deploy-action@v4.4.1
      with:
          branch: gh-pages
          folder: tools/benchmark/pages
          clean: false
