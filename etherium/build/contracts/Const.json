{
  "contractName": "Const",
  "abi": [
    {
      "inputs": [],
      "name": "value",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/const.sol\":\"Const\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/const.sol\":{\"keccak256\":\"0xdb70790ab1bc2d7138f4b679eac5bf469dca4312c0e8699d99c8c1a1709a12d9\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://c8019e6f8ad5953dd32e234db14fe927920a7e1caf104e05da55e4a18525988d\",\"dweb:/ipfs/QmdhFuxRK1xZxQJKWHdoEd37P56UymNJpqf26SBuVr8Rb9\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060b68061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336047565b604051603e91906067565b60405180910390f35b6000602a905090565b6000819050919050565b6061816050565b82525050565b6000602082019050607a6000830184605a565b9291505056fea26469706673582212207f78f73f4cc257c85f7c8a18299c19fbe8d02f4b11314df9e83f9fe612611a2164736f6c63430008120033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336047565b604051603e91906067565b60405180910390f35b6000602a905090565b6000819050919050565b6061816050565b82525050565b6000602082019050607a6000830184605a565b9291505056fea26469706673582212207f78f73f4cc257c85f7c8a18299c19fbe8d02f4b11314df9e83f9fe612611a2164736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:431:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "51:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "61:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "72:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "61:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "33:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "43:7:5",
                "type": ""
              }
            ],
            "src": "7:76:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "152:52:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "169:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "191:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "174:16:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "174:23:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "162:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "162:36:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "162:36:5"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "140:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "147:3:5",
                "type": ""
              }
            ],
            "src": "89:115:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:122:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "316:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "328:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "339:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "324:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "324:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "316:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "352:41:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:69:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "352:69:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "278:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "290:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "301:4:5",
                "type": ""
              }
            ],
            "src": "210:218:5"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "64:92:3:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "64:92:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;85:69;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;123:3;145:2;138:9;;85:69;:::o;7:76:5:-;43:7;72:5;61:16;;7:76;;;:::o;89:115::-;174:23;191:5;174:23;:::i;:::-;169:3;162:36;89:115;;:::o;210:218::-;301:4;339:2;328:9;324:18;316:26;;352:69;418:1;407:9;403:17;394:6;352:69;:::i;:::-;210:218;;;;:::o",
  "source": "// SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.16;\n\ncontract Const {\n    function value() public pure returns (int) {\n        return 42;\n    }\n}\n",
  "sourcePath": "/home/viktar/evm2near/etherium/contracts/const.sol",
  "ast": {
    "absolutePath": "project:/contracts/const.sol",
    "exportedSymbols": {
      "Const": [
        207
      ]
    },
    "id": 208,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 198,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:24:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Const",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 207,
        "linearizedBaseContracts": [
          207
        ],
        "name": "Const",
        "nameLocation": "73:5:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "128:26:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3432",
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "145:2:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_42_by_1",
                      "typeString": "int_const 42"
                    },
                    "value": "42"
                  },
                  "functionReturnParameters": 202,
                  "id": 204,
                  "nodeType": "Return",
                  "src": "138:9:3"
                }
              ]
            },
            "functionSelector": "3fa4f245",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "value",
            "nameLocation": "94:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "99:2:3"
            },
            "returnParameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "123:3:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "123:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "122:5:3"
            },
            "scope": 207,
            "src": "85:69:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 208,
        "src": "64:92:3",
        "usedErrors": []
      }
    ],
    "src": "38:119:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xe38add955BdB1C7c320650e85bdB5930653F64aa",
      "transactionHash": "0x93620271bc66af907681df7e70c13c6a61d3ae0741013b490557ac52ca179049"
    }
  },
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-02-20T12:19:31.607Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}